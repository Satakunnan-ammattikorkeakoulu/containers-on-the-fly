meta {
  name: Get All Users
  type: http
  seq: 1
}

get {
  url: {{root_url}}/admin/users
  body: none
  auth: bearer
}

auth:bearer {
  token: {{admin_token}}
}

tests {
  test("Status code is 200", function() {
    expect(res.status).to.equal(200);
  });
  
  test("Response is successful", function() {
    expect(res.body).to.have.property('status');
    expect(res.body.status).to.equal('success');
  });
  
  test("Response has users array", function() {
    expect(res.body).to.have.property('data');
    expect(res.body.data).to.be.an('array');
    expect(res.body.data.length).to.be.greaterThan(0);
  });
  
  test("User items have required fields", function() {
    const user = res.body.data[0];
    expect(user).to.have.property('userId');
    expect(user).to.have.property('email');
    expect(user).to.have.property('firstName');
    expect(user).to.have.property('lastName');
    expect(user).to.have.property('roles');
    expect(user).to.have.property('storageQuota');
    expect(user).to.have.property('storageUsed');
  });
  
  test("Default users exist", function() {
    const emails = res.body.data.map(u => u.email);
    expect(emails).to.include('admin@foo.com');
    expect(emails).to.include('user@foo.com');
  });
}