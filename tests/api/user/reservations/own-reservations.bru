meta {
  name: Get Own Reservations
  type: http
  seq: 2
}

post {
  url: {{root_url}}/reservation/get_own_reservations
  body: json
  auth: bearer
}

auth:bearer {
  token: {{user_token}}
}

body:json {
  {
    "filters": {
      "dateFrom": null,
      "dateTo": null,
      "status": null
    }
  }
}

tests {
  test("Status code is 200", function() {
    expect(res.status).to.equal(200);
  });
  
  test("Response is successful", function() {
    expect(res.body).to.have.property('status');
    expect(res.body.status).to.equal('success');
  });
  
  test("Response has reservation data", function() {
    expect(res.body).to.have.property('data');
    expect(res.body.data).to.be.an('array');
  });
  
  test("Reservation items have required fields", function() {
    if (res.body.data.length > 0) {
      const reservation = res.body.data[0];
      expect(reservation).to.have.property('reservationId');
      expect(reservation).to.have.property('containerName');
      expect(reservation).to.have.property('computerName');
      expect(reservation).to.have.property('startDate');
      expect(reservation).to.have.property('endDate');
      expect(reservation).to.have.property('status');
    }
  });
}