{
    // Settings related to the app
    "app": {
      // Edit in settings file, overridden by 'start-main-server' make task.
      "name": "Containers on the Fly",
      // Edit in settings file, overridden by 'start-main-server' make task.
      "url": "http://localhost",
      // Edit in settings file, overridden by 'start-main-server' make task.
      "clientUrl": "http://localhost:8080",
      // Edit in settings file, overridden by 'start-main-server' make task.
      "timezone": "Europe/Helsinki",
      // Path to app logo shown in the main login page of the web interface.
      "logoUrl": "/static/logos/logo.png",
      // Port of the backend web application. Leave it to default 8000 if you are unsure what you are doing.
      "port": 8000,
      // Set to true when running in production. Reduces the amount of info messages in the console.
      "production": true,
      // Set to true if you want test data to be added when the server starts (if it does not exist yet)
      "addTestDataInDevelopment": true
    },
    // Details of reservation
    "reservation": {
      // Minimum hours for docker server reservation
      "minimumDuration": 5,
      // Maximum hours for docker server reservation
      "maximumDuration": 72
    },
    // Details for logging in the system
    "login": {
      // Can be password or LDAP. If LDAP, please look at the LDAP section in the documentation for details on setting it up
      // If this is password, logins are executed directly with email and password combination
      // If this is LDAP, logins are done against an (external) LDAP server. Users are created on-the-fly in the system if they exist in the LDAP server
      "loginType": "password",
      // If enabled, user email will need to be found in Whitelist table in the server to login.
      "useWhitelist": false
    },
    // Related to logged in user
    "session": {
      // Minutes how long the user is logged in until logged out automatically
      "timeoutMinutes": 1440
    },
    // Database settings
    "database": {
      // Edit in settings file, overridden by 'start-main-server' and 'start-docker-utility' make tasks.
      "engineUri": "",
      // If set to true, prints all database operations to console
      "debugPrinting": false
    },
    // Docker settings
    "docker": {
      // Edit in settings file, overridden by 'start-main-server' make task.
      "registryAddress": "",
      // Set to true to enable starting virtual servers.
      "enabled": true,
      // Name of the server. This is used by the backend docker utility to start docker container in the correct server.
      // This should be the same as specified in the database for the computer as name.
      // For example: aiserver
      "serverName": "aiserver",
      // Full path to the location where docker will mount user files, without the ending slash. For example: /home/aiserver/mounts
      // Each user will have a folder in this location for saving persistent data, with the user's email (special characters removed) as the folder name
      // For example: "/home/aiserver/persistent_mounts"
      "mountLocation": "/home/aiserver/persistent_mounts",
      // User in the host system who will own the mounted folder. This needs to exist. Can be left as: root
      "mountUser": "root",
      // Group in the host system who will own the mounted folder. Can be left as: docker
      "mountGroup": "docker",
      // Sets the shm_size for the docker container. For example: 1g. Read more: https://docs.docker.com/compose/compose-file/build/#shm_size
      "shm_size": "1g",
      // Edit in settings file, overridden by 'start-main-server' make task.
      "port_range_start": 2020,
      // Edit in settings file, overridden by 'start-main-server' make task.
      "port_range_end": 2200,
      // If set to true, user will be notified by email about the started container. The email will be sent only after the actual container has been started, not directly after reservation.
      "sendEmail": true,
      // Optional text added to the beginning of the email sent to the users when the container starts.
      "generalText": "You need to be in school network to access the machine. From home you can use studentVPN to connect to the machine.",
      // Optional extra mounts to be mounted to the container. For example, if you want to mount a folder from the host system to the container.
      "extraMounts": [
        {
          // Full path to the location where docker will mount user files, without the ending slash. For example: /home/aiserver/datasets
          "mountLocation": "/home/aiserver/datasets",
          // Will be the name of the folder in the container under the user. For example: datasets
          "containerFolderName": "datasets",
          // If set to true, will be mounted as read-only so user cannot make any changes to the folder
          "readOnly": true
        }
      ]
    },
    // SMTP server details for sending emails (optional)
    // Email is sent for ex. for an user when their reservation begins.
    // SMTP is used as local email sending usually fails.
    // You can create or use an existing Google or Outlook email address and pass their details here.
    "email": {
      // Switch to true if you want to send email from the system. After switching to true, configure the SMTP settings below.
      "sendEmail": false,
      // Address of the SMTP server
      "smtpAddress": "smtp.office365.com",
      // Port of the SMTP server
      "smtpPort": 587,
      // Username (email) for the SMTP server
      "emailAddress": "email@test.com",
      // Password for the SMTP server's user
      "smtpPassword": "abc123",
      // If set, will be displayed in the app and emails as the address which can be contacted if any errors occur
      "helpEmailAddress": "info@example.com"
    }
  }