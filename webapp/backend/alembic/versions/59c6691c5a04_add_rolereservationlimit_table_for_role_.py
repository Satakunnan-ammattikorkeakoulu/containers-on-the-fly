"""Add RoleReservationLimit table for role-based reservation limits

Revision ID: 59c6691c5a04
Revises: fc39c265d6b8
Create Date: 2025-07-27 19:35:11.577254

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision: str = '59c6691c5a04'
down_revision: Union[str, Sequence[str], None] = 'fc39c265d6b8'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('RoleReservationLimit',
    sa.Column('roleReservationLimitId', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('roleId', sa.Integer(), nullable=False),
    sa.Column('minDuration', sa.Integer(), nullable=True),
    sa.Column('maxDuration', sa.Integer(), nullable=True),
    sa.Column('maxActiveReservations', sa.Integer(), nullable=True),
    sa.Column('createdAt', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updatedAt', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['roleId'], ['Role.roleId'], ),
    sa.PrimaryKeyConstraint('roleReservationLimitId'),
    sa.UniqueConstraint('roleId', name='unique_role')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('RoleReservationLimit')
    # ### end Alembic commands ###
